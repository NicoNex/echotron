package echokit

import (
	"fmt"

	"github.com/NicoNex/echotron/v3"
)

// APIError is an error generated by a Telegram resonse
type APIError struct {
	code int
	desc string
}

// Code returns the error-code status of the error
func (a APIError) Code() int {
	return a.code
}

// Desc return the description of the error
func (a APIError) Desc() string {
	return a.desc
}

// Error returns a complete error description
// thanks to this method ResponseError can be used as an error interface
func (a APIError) Error() string {
	return fmt.Sprint("api error, code ", a.code, ", description ", a.desc)
}

// CheckResponseBase transform an error and an echotron.APIResponse object into an error of type APIError.
func Check(response echotron.APIResponse, err error) error {
	if err != nil {
		return err
	}

	if r := response.Base(); !r.Ok {
		return APIError{r.ErrorCode, r.Description}
	}
	return nil
}
